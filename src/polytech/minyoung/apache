---
layout : home
---

# 아파치(APACHE)
Apache는 가장 인기 있는 웹 서버 중 하나로, 오픈 소스 소프트웨어로 개발되었다. 
Apache 웹 서버는 대부분의 운영 체제에서 실행되며, 많은 웹 사이트와 웹 애플리케이션에서 사용된다.
Apache는 매우 안정적이고 확장성이 높은 웹 서버이고, Apache는 모듈화된 아키텍처를 갖추고 있어, 다양한 기능을 추가할 수 있다. 
이러한 모듈은 인증, 보안, 로깅, URL 리다이렉션 등을 비롯한 다양한 작업을 처리할 수 있다.

Apache는 무료이며 오픈 소스이기 때문에, 누구나 다운로드하고 사용할 수 있다. 이러한 이유로 Apache는 웹 서버 시장에서 매우 인기가 높다.

## Apache의 구성 요소
Apache는 아파치 소프트웨어 재단에서 개발되었으며, 주요 구성 요소로는 웹 서버, 모듈, 설정 파일 등이 있다. 
Apache 웹 서버는 클라이언트에서 요청이 들어오면 해당 요청을 받아서 처리하고, 응답을 보내는 역할을 한다. 
모듈은 Apache 웹 서버의 기능을 확장하고, 설정 파일은 Apache 웹 서버의 동작을 제어한다.

## Apache의 동작 방식
Apache는 다음과 같은 단계로 동작한다.

1. 클라이언트가 Apache 웹 서버에 요청을 보냅니다.
2. Apache 웹 서버는 해당 요청을 받아서 처리합니다.
3. Apache 웹 서버는 모듈을 사용하여 해당 요청에 대한 처리를 수행합니다.
4. 처리가 완료되면 Apache 웹 서버는 클라이언트에게 응답을 보냅니다.

## Apache 모듈
Apache 웹 서버는 모듈화된 아키텍처를 갖추고 있어서, 다양한 모듈을 추가하여 기능을 확장할 수 있다. 
예를 들어, mod_ssl 모듈을 사용하면 SSL 암호화를 지원하는 HTTPS 연결을 사용할 수 있다. 
다른 모듈로는 mod_rewrite, mod_auth 등이 있습니다.

* **모듈(Module)** 은 소프트웨어의 기능을 확장하거나 개선하기 위해 추가적으로 설치되는 소프트웨어 구성 요소. 
모듈은 프로그램에서 기능을 모듈화하여, 유지 보수 및 개발을 용이하게 만들어주는 등 다양한 장점을 제공한다.
예를 들어, Apache 웹 서버에서 모듈은 Apache 웹 서버의 기능을 확장할 수 있다. mod_ssl 모듈은 SSL 프로토콜을 사용하여 웹 서버와 클라이언트 간에 암호화된 통신을 제공하고, mod_rewrite 모듈은 URL 리다이렉션 및 URL 재작성 기능을 제공한다.
또한, 프로그래밍 언어에서 모듈은 일반적으로 함수나 변수, 클래스 등의 코드 블록을 포함하는 파일이다. 이러한 모듈은 프로그램의 코드를 구성 요소화하여, 다른 프로그램에서 재사용이 가능하도록 만들어준다. 이를 통해 코드의 가독성, 유지 보수성 및 재사용성을 높일 수 있다.
최근에는 모듈을 이용하여 소프트웨어를 개발하고 배포하는 것이 일반적이며, 대부분의 프로그래밍 언어에서 이를 지원한다. 모듈을 이용하여 소프트웨어를 개발하면, 소프트웨어의 확장성을 높이고, 빠른 개발 및 효율적인 유지 보수를 가능하게 한다.

## Apache의 가상 호스팅
Apache 웹 서버는 가상 호스팅을 지원한다. 이는 하나의 물리적인 서버에서 여러 개의 독립적인 웹 사이트를 호스팅할 수 있다는 것을 의미한다. 
가상 호스팅을 사용하면 여러 개의 도메인 이름을 사용하여 서로 다른 웹 사이트를 운영할 수 있다.

## 우분투 apt 설치
우분투에서 apt 패키지 관리자를 통하여 아파치 v2.x를 설치. 
콘솔에서 다음과 같이 명령을 입력. 

* $sudo apt install apache2
apt 명령어는 주로 Debian과 그 파생 배포판에서 사용된다. 이는 Debian 계열의 리눅스 배포판에서 기본적으로 사용되는 패키지 관리자이며, Ubuntu, Linux Mint, Kali Linux, Raspbian 등의 리눅스 배포판에서도 사용된다.
apt(Advanced Package Tool)는 Debian과 그 파생 배포판에서 사용하는 패키지 관리자로, 소프트웨어를 설치, 삭제, 업데이트 및 검색하는 기능을 제공합니다. apt를 사용하면 명령어 한 줄로 패키지 설치 및 관리를 수행할 수 있다.

## Apache 서비스 기동/멈춤
sudo service apache2 start : 아파치 서버 실행
sudo service apache2 restart : 아파치 서버 재시작
sudo service apache2 stop : 아파피 서버 정지

## Apache 서비스 관리
시스템에 등록하여 서비스가 가동/멈춤/상태 를 확인한다.
$ systemctl restart apache2
$ systemctl enable apache2
$ systemctl status apache2

systemctl 서비스를 관리하는 명령어. 
Systemd는 리눅스 시스템에서 부팅, 프로세스 관리, 로그인 관리 등을 위해 사용되는 시스템 및 서비스 매니저이며, systemctl 명령어를 통해 Systemd를 사용하여 다양한 서비스를 관리할 수 있다.
systemctl 명령어를 사용하여 시스템 서비스를 관리할 수 있으며, 서비스의 시작, 중지, 재시작, 재시작 대기열 등의 작업을 수행할 수 있다. 또한 systemctl 명령어를 사용하여 시스템 부팅 시 자동으로 시작되는 서비스를 설정할 수 있으며, 서비스의 상태 정보를 확인할 수도 있다.