---
layout : home
---
# WEB / WAS 비교

## 웹(WEB)서버란 무엇일까?

### 사전적 의미

- 웹 서버(하드웨어) : Web 서버가 설치되어 있는 컴퓨터
- 웹 서버(소프트웨어) : 클라이언트로부터 HTTP 요청을 받아 정적 컨텐츠(.html, .jpg, .css 파일등)를 즉 각종 리소스를 제공하는 컴퓨터 프로그램

### 개념

- 정적 컨텐츠 제공 : WAS를 거치지 않고 바로 자원을 제공
- 동적 컨텐츠 제공 : 클라이언트의 request를 WAS에 보내기

#### 정적, 동적 컨텐츠란?

- 정적 컨텐츠(static) : 변화가 없는 컨텐츠, 어느 사용자에게나 동일한 결과값을 보여줌 ( ex. html, jpg, css 등..)
- 동적 컨텐츠(dynamic) : 배너 광고나 카테고리 등 모두가 볼 수 있어야 하는 컨텐츠는 정적으로두고 , 마이페이지나 장바구니 등 사용자 맞춤형 정보를 제공해야 할때에는 동적 컨텐츠를 사용 ( DB, 비즈니스 로직 )

### 종류

- Apache Server
- Nginx
- IIS
- WebToB

## 웹 어플리케이션 서버(WAS, Web Application Server)란?

서버에서 WAS(Web Application Server)란, 웹 애플리케이션을 실행하는 미들웨어로, 웹 서버와 데이터베이스 서버 사이에서 동작하여 애플리케이션의 로직 수행 및 데이터 처리를 담당하는 소프트웨어.

### 개념

- DB 조회나 로직 처리를 요구하는 동적 컨텐츠를 제공하기 위해 만들어진 Application Server
- **Web container** 혹은 **Servlet Container**라고도 불린다.
- Container란 jsp, Servlet을 실행시킬 수 있는 소프트웨어를 말한다.

### 기능

- 프로그램 실행 환경과 DB 접속 기능 제공
- 여러 개의 트랜잭션 관리기능
- 업무 처리하는 비즈니스 로직수행
- ex) Tomcat, Websphere, Weblogic, Jeus, JBoss, Resin 등..

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5bf47c14-0c65-4371-858e-9f459a24dca4/Untitled.png)

### ### WAS의 종류와 특징

#### Tomcat 기능

- Jsp/Servlet Container중 하나로 사용자에게 JSP요청을 받으면 서블릿으로 바꾸어 실행
- Web Server에서 요청한 동적 페이지를 읽어 프로그램을 실행
- 그 결과를 다시 HTML로 재구성하여 Web Server에게 전달
    - JSP(JavaServer Pages)는 동적 웹 페이지를 생성하는 데 사용되는 Java 기반 서버 사이드 스크립트 언어. JSP는 HTML 코드와 Java 코드를 결합하여 웹 페이지를 생성할 수 있음. JSP 파일은 일반적으로 .jsp 확장자를 갖는다.
    - Servlet은 Java 웹 어플리케이션에서 동적인 처리를 담당하는 Java 클래스. Servlet은 웹 서버에서 실행되며, 클라이언트 요청을 수신하고 해당 요청을 처리하여 새로운 동적인 컨텐츠를 생성. Servlet은 일반적으로 .java 확장자를 갖는다.
    - Servlet과 JSP는 웹 애플리케이션의 다양한 요구사항을 처리하는 데 사용. 예를 들어, 데이터베이스와의 상호 작용, 파일 업로드, 사용자 인증 및 권한 부여, 웹 서비스와의 상호 작용 등을 처리함.
    - Servlet과 JSP를 실행하기 위해서는 Servlet Container가 필요. Servlet Container는 Servlet 및 JSP를 실행하고 관리하는 Java 프로그램. 대표적인 Servlet Container로는 Tomcat, Jetty, JBoss 등이 있다. Servlet Container는 웹 서버와 연동하여 클라이언트 요청을 받아 처리하고 Servlet Container는 Servlet 및 JSP의 라이프 사이클을 관리하며, 성능과 보안 등을 관리하는 역할을 수행.

#### Tomcat 특징

- Servlet Container를 지원함
- 플랫폼에 제약이 없음 ( Windows, Linux, Unix )

### ### Servlet(서블릿) 이란?

#### 개념

- 클라이언트의 요청을 처리하고, 그 결과를 반환하는 Servlet 클래스의 구현 규칙을 지킨 자바 웹 프로그래밍 기술
- 자바를 사용하여 웹을 만들기 위해 필요한 기술
- 클라이언트가 어떠한 요청을 하면 그에 대한 결과를 다시 전송 해주는 역할을 하는 자바 프로그램

##### 특징

- 클라이언트의 요청에 대해 동적으로 작동하는 웹 어플리케이션 컴포넌트
- html을 사용하여 요청에 응답한다.
- Java Thread를 이용하여 동작한다.
- MVC 패턴에서 Controller로 이용된다.
- HTTP 프로토콜 서비스를 지원하는 javax.servlet.http.HttpServlet 클래스를 상속받는다.

### 동작방식

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f452f514-1d81-404d-a133-4d88368d8c48/Untitled.png)

1. 사용자(클라이언트)가 URL을 입력하면 HTTP Request가 Servlet Container로 전송.

2. 요청을 전송받은 ServletContainer는 HttpServletRequest, HttpServletResponse 객체를 생성.

3. web.xml을 기반으로 사용자가 요청한 URL이 어느 서블릿에 대한 요청인지 찾음.

4. 해당 서블릿에서 service메소드를 호출한 후 클라이언트의 GEt, POST여부에 따라 doGet()또는 doPost()를 호출.

5. doGet() or doPost() 메소드는 동적 페이지를 생성한 후 HttpServletResponse객체에 응답을 보냄.

6. 응답이 끝나면 HttpServletRequest, HttpServletResponse 두 객체를 소멸시킴.